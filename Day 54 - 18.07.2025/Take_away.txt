Frontend Feature add project work

namespace TrueVote.Interfaces;
public interface IEmailService
{
    Task SendEmailAsync(string toEmail, string subject, string body);
}

using MailKit.Net.Smtp;
using MimeKit;
using Microsoft.Extensions.Options;
using TrueVote.Interfaces;

public class EmailService : IEmailService
{
    private readonly EmailSettings _settings;

    public EmailService(IOptions<EmailSettings> settings)
    {
        _settings = settings.Value;
    }

    public async Task SendEmailAsync(string toEmail, string subject, string body)
    {
        var email = new MimeMessage();
        email.From.Add(new MailboxAddress(_settings.SenderName, _settings.SenderEmail));
        email.To.Add(MailboxAddress.Parse(toEmail));
        email.Subject = subject;

        var builder = new BodyBuilder { HtmlBody = body };
        email.Body = builder.ToMessageBody();

        using var smtp = new SmtpClient();
        await smtp.ConnectAsync(_settings.SmtpServer, _settings.Port, MailKit.Security.SecureSocketOptions.StartTls);
        await smtp.AuthenticateAsync(_settings.Username, _settings.Password);
        await smtp.SendAsync(email);
        await smtp.DisconnectAsync(true);
    }
}





public class EmailSettings
{
    public string SmtpServer { get; set; }
    public int Port { get; set; }
    public string SenderName { get; set; }
    public string SenderEmail { get; set; }
    public string Username { get; set; }
    public string Password { get; set; }
}







"EmailSettings": {
    "SmtpServer": "smtp.gmail.com",
    "Port": 587,
    "SenderName": "TrueVote Notifications",
    "SenderEmail": "srikanthsrikanth2677@gmail.com",
    "Username": "srikanthsrikanth2677@gmail.com",
    "Password": "aefh hlnz hddp kivb"
  }




              var voterEmails = await _voterEmailRepository.GetAll();
            foreach (var voterEmail in voterEmails)
            {
                var subject = "üì¢ New Poll Created: " + newPoll.Title;
                var body = $@"
                            <html>
                            <body style='font-family: Arial, sans-serif;'>
                                <h2 style='color: #2c3e50;'>üó≥Ô∏è A New Poll Has Been Created!</h2>
                                <p>Hello,</p>
                                <p>A new poll titled <strong>{newPoll.Title}</strong> has just been created by the {loggedInUser}.</p>

                                <p><strong>Details:</strong></p>
                                <ul>
                                    <li><b>Title:</b> {newPoll.Title}</li>
                                    <li><b>Start Time:</b> {newPoll.StartDate}</li>
                                    <li><b>End Time:</b> {newPoll.EndDate}</li>
                                </ul>

                                <p>Your vote matters! Please log in to the app and cast your vote before the deadline.</p>

                                <p style='margin-top:20px;'>Regards,<br/>TrueVote Team</p>
                                <hr/>
                                <p style='font-size: 12px; color: gray;'>This is an automated message. Please do not reply.</p>
                            </body>
                            </html>";

                await _emailService.SendEmailAsync(voterEmail.Email, subject, body);
                Console.WriteLine($"Email sent to: {voterEmail.Email}");
            }








